import type { NextPage } from 'next';
import Head from 'next/head';
import { useEffect, useRef } from 'react';
import { useDispatch } from 'react-redux';
import CharacterCount from '../components/CharacterCount';
import PracticeStats from '../components/PracticeStats';
import PracticeText from '../components/PracticeText';
import TypeInput from '../components/TypeInput';
import { useAppSelector } from '../lib/hooks';
import { setPracticeText } from '../redux/slices/practiceTextSlice';

const Home: NextPage = () => {
  const dispatch = useDispatch();
  const practiceState = useAppSelector((state) => state.practiceState.value);
  const textShown = practiceState.reason !== 'Ended';

  const inputRef = useRef<HTMLInputElement>(null);

  useEffect(() => {
    (async () => {
      const res = await fetch('/api/getPracticeText');

      if (!res.ok) return;

      const data = await res.json();
      dispatch(setPracticeText(data));
    })();
  }, []);

  return (
    <>
      <Head>
        <title>Typing Practice</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main
        className="screen min-h-screen flex flex-col items-center justify-center p-4 bg-main"
        onClick={() => inputRef && inputRef.current?.focus()}
      >
        <CharacterCount />
        {textShown ? (
          <div className="relative">
            <TypeInput inputRef={inputRef} />
            <PracticeText />
          </div>
        ) : (
          <PracticeStats />
        )}
      </main>
    </>
  );
};

export default Home;
